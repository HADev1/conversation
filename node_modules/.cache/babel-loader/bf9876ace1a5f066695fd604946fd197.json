{"ast":null,"code":"var _jsxFileName = \"E:\\\\9thDimension\\\\Chat\\\\chat-app-second-phase\\\\frontend\\\\src\\\\screens\\\\register\\\\register-layout.jsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport useApi from \"../../hooks/use-api\";\nimport * as authApi from \"../../apis/auth\";\nimport * as registerUtils from \"../../utils/register\";\nimport { RegisterForm } from \"../../components/register\";\nimport ServerError from \"../../components/common/server-error\";\nimport { routeNames } from \"../../routes/route-name\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterLayout() {\n  _s();\n\n  const history = useHistory();\n  const auth = useApi(authApi.register, {\n    hasCatchError: true\n  });\n\n  const handleSubmit = async formValues => {\n    const validatedFields = getValidatedFields(formValues);\n\n    try {\n      await auth.request(validatedFields);\n      history.replace(routeNames.login);\n    } catch (err) {}\n  };\n\n  const getValidatedFields = formValues => {\n    const isProvider = formValues.clientType === registerUtils.clientTypes.provider;\n    const registerFields = { ...formValues,\n      isProvider\n    };\n    return registerFields;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main order-md-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ServerError, {\n              error: auth.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n              initValues: registerUtils.initValues,\n              clientTypes: registerUtils.clientTypes,\n              validationRules: registerUtils.validationRules,\n              onSubmit: handleSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterLayout, \"Lhtdnf1lmTJDFS3pRh+17wazZFA=\", false, function () {\n  return [useHistory, useApi];\n});\n\n_c = RegisterLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterLayout\");","map":{"version":3,"sources":["E:/9thDimension/Chat/chat-app-second-phase/frontend/src/screens/register/register-layout.jsx"],"names":["useHistory","useApi","authApi","registerUtils","RegisterForm","ServerError","routeNames","RegisterLayout","history","auth","register","hasCatchError","handleSubmit","formValues","validatedFields","getValidatedFields","request","replace","login","err","isProvider","clientType","clientTypes","provider","registerFields","error","initValues","validationRules"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,OAAO,GAAGR,UAAU,EAA1B;AACA,QAAMS,IAAI,GAAGR,MAAM,CAACC,OAAO,CAACQ,QAAT,EAAmB;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GAAnB,CAAnB;;AAEA,QAAMC,YAAY,GAAG,MAAOC,UAAP,IAAsB;AACzC,UAAMC,eAAe,GAAGC,kBAAkB,CAACF,UAAD,CAA1C;;AAEA,QAAI;AACF,YAAMJ,IAAI,CAACO,OAAL,CAAaF,eAAb,CAAN;AACAN,MAAAA,OAAO,CAACS,OAAR,CAAgBX,UAAU,CAACY,KAA3B;AACD,KAHD,CAGE,OAAOC,GAAP,EAAY,CAAE;AACjB,GAPD;;AASA,QAAMJ,kBAAkB,GAAIF,UAAD,IAAgB;AACzC,UAAMO,UAAU,GACdP,UAAU,CAACQ,UAAX,KAA0BlB,aAAa,CAACmB,WAAd,CAA0BC,QADtD;AAEA,UAAMC,cAAc,GAAG,EAAE,GAAGX,UAAL;AAAiBO,MAAAA;AAAjB,KAAvB;AACA,WAAOI,cAAP;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAEf,IAAI,CAACgB;AAAzB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,YAAD;AACE,cAAA,UAAU,EAAEtB,aAAa,CAACuB,UAD5B;AAEE,cAAA,WAAW,EAAEvB,aAAa,CAACmB,WAF7B;AAGE,cAAA,eAAe,EAAEnB,aAAa,CAACwB,eAHjC;AAIE,cAAA,QAAQ,EAAEf;AAJZ;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAxCuBL,c;UACNP,U,EACHC,M;;;KAFSM,c","sourcesContent":["import { useHistory } from \"react-router-dom\";\nimport useApi from \"../../hooks/use-api\";\nimport * as authApi from \"../../apis/auth\";\nimport * as registerUtils from \"../../utils/register\";\nimport { RegisterForm } from \"../../components/register\";\nimport ServerError from \"../../components/common/server-error\";\nimport { routeNames } from \"../../routes/route-name\";\n\nexport default function RegisterLayout() {\n  const history = useHistory();\n  const auth = useApi(authApi.register, { hasCatchError: true });\n\n  const handleSubmit = async (formValues) => {\n    const validatedFields = getValidatedFields(formValues);\n\n    try {\n      await auth.request(validatedFields);\n      history.replace(routeNames.login);\n    } catch (err) {}\n  };\n\n  const getValidatedFields = (formValues) => {\n    const isProvider =\n      formValues.clientType === registerUtils.clientTypes.provider;\n    const registerFields = { ...formValues, isProvider };\n    return registerFields;\n  };\n\n  return (\n    <div className=\"main order-md-2\">\n      <div className=\"start\">\n        <div className=\"container\">\n          <div className=\"col-md-12\">\n            <div className=\"content\">\n              <h1>Create Account</h1>\n              <ServerError error={auth.error} />\n              <RegisterForm\n                initValues={registerUtils.initValues}\n                clientTypes={registerUtils.clientTypes}\n                validationRules={registerUtils.validationRules}\n                onSubmit={handleSubmit}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}