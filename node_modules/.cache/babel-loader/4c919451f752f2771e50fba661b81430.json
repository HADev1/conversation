{"ast":null,"code":"import api from \"../../apis\";\nimport * as actions from \"../api\";\n\nconst apiMiddleware = ({\n  dispatch\n}) => next => async action => {\n  if (action.type !== actions.apiCallBegan.type) return next(action);\n  const {\n    url,\n    method,\n    data,\n    onStart,\n    onSuccess,\n    onError\n  } = action.payload;\n  next(action);\n  if (onStart) dispatch({\n    type: onStart\n  });\n\n  try {\n    const res = await api.request({\n      url,\n      method,\n      data\n    });\n    dispatch(actions.apiCallSuccess(res.data));\n    if (onSuccess) dispatch({\n      type: onSuccess,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch(actions.apiCallFailed(err));\n    if (onError) dispatch({\n      type: onError,\n      payload: err\n    });\n  }\n};\n\nexport default apiMiddleware;","map":{"version":3,"sources":["E:/9thDimension/Chat/chat-app-second-phase/frontend/src/store/middlewares/api.js"],"names":["api","actions","apiMiddleware","dispatch","next","action","type","apiCallBegan","url","method","data","onStart","onSuccess","onError","payload","res","request","apiCallSuccess","err","apiCallFailed"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,QAAzB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgBC,IAAI,IAAI,MAAMC,MAAN,IAAgB;AAC5D,MAAIA,MAAM,CAACC,IAAP,KAAgBL,OAAO,CAACM,YAAR,CAAqBD,IAAzC,EAA+C,OAAOF,IAAI,CAACC,MAAD,CAAX;AAC/C,QAAM;AAACG,IAAAA,GAAD;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAAmDR,MAAM,CAACS,OAAhE;AACAV,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACA,MAAIM,OAAJ,EAAaR,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEK;AAAP,GAAD,CAAR;;AAEb,MAAI;AACF,UAAMI,GAAG,GAAG,MAAMf,GAAG,CAACgB,OAAJ,CAAY;AAC5BR,MAAAA,GAD4B;AAE5BC,MAAAA,MAF4B;AAG5BC,MAAAA;AAH4B,KAAZ,CAAlB;AAMAP,IAAAA,QAAQ,CAACF,OAAO,CAACgB,cAAR,CAAuBF,GAAG,CAACL,IAA3B,CAAD,CAAR;AACA,QAAIE,SAAJ,EAAeT,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEM,SAAP;AAAkBE,MAAAA,OAAO,EAAEC,GAAG,CAACL;AAA/B,KAAD,CAAR;AAChB,GATD,CASE,OAAOQ,GAAP,EAAY;AACZf,IAAAA,QAAQ,CAACF,OAAO,CAACkB,aAAR,CAAsBD,GAAtB,CAAD,CAAR;AACA,QAAIL,OAAJ,EAAaV,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEO,OAAP;AAAgBC,MAAAA,OAAO,EAAEI;AAAzB,KAAD,CAAR;AACd;AACF,CAnBD;;AAqBA,eAAehB,aAAf","sourcesContent":["import api from \"../../apis\";\nimport * as actions from \"../api\";\n\nconst apiMiddleware = ({dispatch}) => next => async action => {\n  if (action.type !== actions.apiCallBegan.type) return next(action);\n  const {url, method, data, onStart, onSuccess, onError} = action.payload;\n  next(action);\n  if (onStart) dispatch({type: onStart});\n\n  try {\n    const res = await api.request({\n      url,\n      method,\n      data\n    });\n\n    dispatch(actions.apiCallSuccess(res.data));\n    if (onSuccess) dispatch({type: onSuccess, payload: res.data});\n  } catch (err) {\n    dispatch(actions.apiCallFailed(err));\n    if (onError) dispatch({type: onError, payload: err});\n  }\n};\n\nexport default apiMiddleware;"]},"metadata":{},"sourceType":"module"}