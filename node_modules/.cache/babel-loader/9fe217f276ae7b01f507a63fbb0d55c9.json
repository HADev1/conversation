{"ast":null,"code":"import * as yup from \"yup\";\nconst validationRules = yup.object().shape({\n  name: yup.string().min(5).required().label(\"Username\"),\n  email: yup.string().email().required().label(\"Email\"),\n  password: yup.string().min(8).required().label(\"Password\"),\n  clientType: yup.string().oneOf([\"provider\", \"subscriber\"]).required().label(\"Client Type\")\n});\nconst initValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  clientType: \"subscriber\"\n};\nconst clientTypes = {\n  provider: \"provider\",\n  subscriber: \"subscriber\"\n};\nexport { validationRules, initValues, clientTypes };","map":{"version":3,"sources":["E:/9thDimension/Chat/chat-app-second-phase/frontend/src/utils/register/index.js"],"names":["yup","validationRules","object","shape","name","string","min","required","label","email","password","clientType","oneOf","initValues","clientTypes","provider","subscriber"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AAEA,MAAMC,eAAe,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACzCC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,GAA+BC,KAA/B,CAAqC,UAArC,CADmC;AAEzCC,EAAAA,KAAK,EAAET,GAAG,CAACK,MAAJ,GAAaI,KAAb,GAAqBF,QAArB,GAAgCC,KAAhC,CAAsC,OAAtC,CAFkC;AAGzCE,EAAAA,QAAQ,EAAEV,GAAG,CAACK,MAAJ,GAAaC,GAAb,CAAiB,CAAjB,EAAoBC,QAApB,GAA+BC,KAA/B,CAAqC,UAArC,CAH+B;AAIzCG,EAAAA,UAAU,EAAEX,GAAG,CACZK,MADS,GAETO,KAFS,CAEH,CAAC,UAAD,EAAa,YAAb,CAFG,EAGTL,QAHS,GAITC,KAJS,CAIH,aAJG;AAJ6B,CAAnB,CAAxB;AAWA,MAAMK,UAAU,GAAG;AACjBT,EAAAA,IAAI,EAAE,EADW;AAEjBK,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,UAAU,EAAE;AAJK,CAAnB;AAOA,MAAMG,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,UADQ;AAElBC,EAAAA,UAAU,EAAE;AAFM,CAApB;AAKA,SAASf,eAAT,EAA0BY,UAA1B,EAAsCC,WAAtC","sourcesContent":["import * as yup from \"yup\";\n\nconst validationRules = yup.object().shape({\n  name: yup.string().min(5).required().label(\"Username\"),\n  email: yup.string().email().required().label(\"Email\"),\n  password: yup.string().min(8).required().label(\"Password\"),\n  clientType: yup\n    .string()\n    .oneOf([\"provider\", \"subscriber\"])\n    .required()\n    .label(\"Client Type\"),\n});\n\nconst initValues = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  clientType: \"subscriber\",\n};\n\nconst clientTypes = {\n  provider: \"provider\",\n  subscriber: \"subscriber\",\n};\n\nexport { validationRules, initValues, clientTypes };\n"]},"metadata":{},"sourceType":"module"}